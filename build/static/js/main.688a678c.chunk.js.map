{"version":3,"sources":["functions/index.js","components/NavBar/NavItem.js","components/NavBar/NavBar.js","components/Input/Input.js","components/Button/Button.js","components/Form/Form.js","pages/Product/Add.js","pages/Product/Edit.js","pages/Product/View.js","components/ListItem/ListItem.js","pages/Product/List.js","pages/Product/index.js","components/Select/Select.js","pages/Sale/Add.js","pages/Sale/Edit.js","pages/Sale/View.js","pages/Sale/List.js","pages/Sale/index.js","pages/Customer/Add.js","pages/Customer/Edit.js","pages/Customer/View.js","pages/Customer/List.js","pages/Customer/index.js","pages/index.js","App.js","index.js"],"names":["module","exports","checkCPF","cpf","temp","count","total","toString","substr","charAt","formatCPF","substring","formatUSD","Intl","NumberFormat","style","currency","minimumFractionDigits","makePath","params","type","process","join","NavItem","props","key","keyItem","className","href","link","icon","name","NavBar","map","item","index","Input","useState","active","setActive","divClass","label","htmlFor","id","min","max","minLength","maxLength","value","readOnly","view","inputClass","placeholder","placeHolder","onBlur","e","onFocus","onChange","Button","submit","color","onClick","click","children","Form","onSubmit","onCancel","Add","changeInputValue","inputs","setInputs","newInputs","slice","input","i","target","preventDefault","values","data","result","sku","length","status","msg","price","parseInt","window","alert","axios","post","then","res","location","Edit","useEffect","get","View","ListItem","subName","url","onDelete","List","products","setProducts","getProducts","product","_id","confirm","delete","confirmDelete","Product","action","Select","readonly","change","options","option","customersToSelect","setCustomersToSelect","productsToSelect","setProductsToSelect","productsInfo","setProductsInfo","customer","sale","setSale","profitability","qtd","newSale","Object","assign","newTotal","forEach","includes","cust","push","fname","lname","prodsToSelect","prods","checkQtd","minQtd","newQtd","up","Math","ceil","down","floor","handleChange","newProducts","originalPrice","actualPrice","isNaN","format","selectCustomer","unshift","addProduct","toUpperCase","changeProduct","removeProduct","saleInfo","stop","validate","calcTot","sales","setSales","getSales","totalSum","confirmaDelete","Sale","validateCPF","field","console","log","customers","setCustomers","getCustomers","Customer","Home","info","setInfo","JSON","stringify","library","add","faShoppingBag","faUser","faDollarSign","faHome","faTrashAlt","App","page","pathname","split","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.688a678c.chunk.js","sourcesContent":["module.exports = {\n  checkCPF: cpf => {\n    let temp, count, total;\n\n    temp = cpf.toString().substr(0,9);\n    count = 10;\n    total = 0;\n    for (let number of temp) {\n      total += (number*count);\n      count--;\n    }\n    total = ((total*10)%11)\n    if (total > 9) total = 0;\n    if (total != cpf.toString().charAt(9)) {\n      return false;\n    }\n\n    temp = cpf.toString().substr(0,10);\n    count = 11;\n    total = 0;\n    for (let number of temp) {\n      total += (number*count);\n      count--;\n    }\n    total = ((total*10)%11)\n    if (total > 9) total = 0;\n    if (total != cpf.toString().charAt(10)) return false;\n\n    return true;\n  },\n\n  formatCPF: cpf => {\n    cpf = cpf.toString();\n    return cpf.substring(0, 3)+'.'+cpf.substring(3, 6)+'.'+cpf.substring(6, 9)+'-'+cpf.substring(9, 11);\n  },\n\n  formatUSD: new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2\n  }),\n\n  makePath: (params, type) => {\n    switch (type) {\n      case 'back':\n        return process.env.REACT_APP_BACK_URL+'/'+params.join('/');\n      case 'front':\n      default:\n        return process.env.REACT_APP_FRONT_URL+'/'+params.join('/');\n    }\n  },\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { makePath } from '../../functions';\n\nconst NavItem = props => {\n  return (\n    <li key={ props.keyItem } className=\"nav-item\">\n      <a href={ makePath([props.link]) }>\n        { props.icon && <FontAwesomeIcon className=\"nav-icon\" icon={ props.icon }/> }\n        <span className=\"nav-span\">{ props.name }</span>\n      </a>\n    </li>\n  );\n}\n\nexport default NavItem;","import React from 'react';\nimport NavItem from './NavItem';\nimport './style/NavBar.css';\n\nconst NavBar = () => {\n  const itens = [\n    {\n      name: \"Home\",\n      link: \"\",\n      icon: \"home\"\n    },\n    {\n      name: \"Products\",\n      link: \"product\",\n      icon: \"shopping-bag\"\n    },\n    {\n      name: \"Customers\",\n      link: \"customer\",\n      icon: \"user\"\n    },\n    {\n      name: \"Sales\",\n      link: \"sale\",\n      icon: \"dollar-sign\"\n    }\n  ];\n\n   return (\n    <nav className=\"nav-bar\">\n      <ul className=\"nav-ul\">\n        { itens.map((item, index) =>\n          <NavItem\n            key={ index }\n            name={ item.name }\n            link={ item.link }\n            icon={ item.icon }\n          />\n        )}\n      </ul>\n    </nav>\n  );\n}\n\nexport default NavBar;","import React, { useState } from 'react';\nimport './style/Input.css';\n\n/*\nExemple:\n\n<Input\n  view=(ReadOnly Flag)\n\n  divClass=\"exemple-class\"\n  className=\"InputClass\"\n\n  onFocus={ onFocus Function }\n  onBlur={ onBlur Function }\n  onChange={ onChange Function }\n\n  label=\"InputLabel\"\n  placeHolde=\"InputPlaceHolder\"\n  id={ Input id }\n  type={ Input Type }\n  name={ Input Name }\n  min={ (Input Limit }\n  max={ (Input Limit }\n  value={ Input Value }\n/>\n*/\n\nconst Input = props => {\n  const [active, setActive] = useState(\"\")\n\n  const focus = e => {\n    if (!props.view) setActive(\" input-active\");\n\n    if (props.onFocus) props.onFocus(e);\n  }\n\n  const blur = e => {\n    if (!props.view) setActive(\"\");\n\n    if (props.onBlur) props.onBlur(e);\n  }\n\n  const change = e => {\n    if (props.onChange) props.onChange(e)\n  }\n\n  return (\n    <div\n      className={\n        \"input-main\" + (props.divClass ? \" \"+props.divClass : \"\") + active\n      }\n    >\n      { props.label && <label className=\"input-label\" htmlFor={ props.id }>{ props.label }</label> }\n      <input\n        id={ props.id }\n        type={ props.type }\n        name={ props.name }\n        min={ (props.type === \"number\" ? props.min : '') }\n        max={ (props.type === \"number\" ? props.max : '') }\n        minLength={ (props.type === \"text\" ? props.min : '') }\n        maxLength={ (props.type === \"text\" ? props.max : '') }\n        value={ props.value }\n        readOnly={ props.view }\n        className={\n          \"input-input\"+\n          (props.inputClass ? \" \"+props.inputClass : \"\")+\n          (props.view ? \" read-only\" : \"\")\n        }\n        placeholder={ props.placeHolder }\n        onBlur={ blur }\n        onFocus={ focus }\n        onChange={ change }\n      />\n    </div>\n  );\n}\n\nexport default Input;","import React from 'react';\nimport './style/Button.css';\n\n/*\nExemple:\n\n<Button\n  divClass=\"exemplde-class\"\n  color=\"green\"\n  click={ onClick Function }\n  name=\"ButtonContent\"\n/>\n*/\n\nconst Button = props => {\n  return (\n    <div className={ \"button-main\"+(props.divClass ? \" \"+props.divClass : \"\") }>\n      <button\n        type={ props.submit ? \"submit\" : \"button\"}\n        className={ \"button-button \" + props.color }\n        onClick={ e => props.click(e) }\n      >\n        { props.name }\n        { props.children }\n      </button>\n    </div>\n  );\n}\n\nexport default Button;","import React from 'react';\nimport Button from '../Button/Button';\nimport './style/Form.css';\n\n/*\nExemple:\n\n<Form\n  name=\"FormTitle\"\n  onSubmit={ onSubmit Function }\n  onCancel={ onCancel Function }\n>\n  Children (Inputs, Buttons, Etc)\n</Form>\n*/\n\nconst Form = ({children, name, onSubmit, onCancel}) => {\n  return (\n    <div className=\"form-main\">\n      <div className=\"form-header\">\n        <h2>{name}</h2>\n      </div>\n      <div className=\"form-content\">\n        {children}\n      </div>\n      <div className=\"form-footer\">\n        <div className=\"form-buttons\">\n          {onCancel && <Button\n            name=\"Cancel\"\n            color=\"red\"\n            click={ e => onCancel(e) }\n          />}\n          {onSubmit && <Button\n            name=\"Confirm\"\n            color=\"green\"\n            submit=\"1\"\n            click={ e => onSubmit(e) }\n          />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Form;","// External Import\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\n// Functions\nimport { makePath } from '../../functions';\n\n// Components\nimport Input from '../../components/Input/Input';\nimport Form from '../../components/Form/Form';\n\nconst Add = () => {\n  // State\n  const [inputs, setInputs] = useState([\n    {\n      id: \"sku\",\n      name: \"sku\",\n      label: \"SKU\",\n      type: \"text\",\n      min: \"3\",\n      max: \"20\",\n      placeHolder: \"Product Identifier\",\n      value: '',\n      onChange: e => changeInputValue(e)\n    },\n    {\n      id: \"name\",\n      name: \"name\",\n      label: \"Name\",\n      type: \"text\",\n      min: \"3\",\n      max: \"100\",\n      placeHolder: \"Product Name\",\n      value: '',\n      onChange: e => changeInputValue(e)\n    },\n    {\n      id: \"price\",\n      name: \"price\",\n      label: \"Price\",\n      type: \"number\",\n      min: \"0\",\n      value: '',\n      placeHolder: \"Product Price\",\n      onChange: e => changeInputValue(e)\n    },\n    {\n      id: \"min\",\n      name: \"min\",\n      label: \"Minimum Purchase Quantity\",\n      type: \"number\",\n      min: \"1\",\n      value: '',\n      placeHolder: \"Minimum Purchase Quantity\",\n      onChange: e => changeInputValue(e)\n    }\n  ]);\n\n  // Validation\n\n  // Check Form Data\n  const validation = data => {\n    if (data.sku.length < 3 || data.sku.length  > 20) {\n      return {\n        status: false,\n        msg: 'Invalid SKU'\n      }\n    }\n\n    if (data.name.length < 3 || data.name.length > 50) {\n      return {\n        status: false,\n        msg: 'Invalid Name'\n      }\n    }\n\n    if (data.price <= 0) {\n      return {\n        status: false,\n        msg: 'Invalid Price'\n      }\n    }\n\n    if (data.min != parseInt(data.min)) {\n      return {\n        status: false,\n        msg: 'Invalid Minimum Purchase Quantity'\n      }\n    }\n\n    return { status: true }\n  }\n\n  // Change State\n  const changeInputValue = e =>{\n    const newInputs = inputs.slice();\n    newInputs.map((input, i) => {\n      if(input.id === e.target.id){\n        newInputs[i].value = e.target.value;\n      }\n    });\n\n    setInputs(newInputs);\n  }\n\n  // Submit Form\n  const onSubmit = e => {\n    e.preventDefault();\n\n    let values = {};\n    inputs.map(input => values[input.name] = input.value)\n\n    let result = validation(values);\n\n    if (!result.status) {\n      window.alert(result.msg)\n      return false;\n    }\n\n    axios.post(makePath(['product', 'add'], 'back'), values)\n    .then(res => {\n      if (res.status === 200) {\n        if (res.data.status) {\n          window.alert('Product successfully registered')\n          window.location.href = makePath(['product'])\n        } else {\n          window.alert(res.data.msg)\n        }\n      } else {\n        window.alert('Connection Error')\n      }\n    })\n  }\n\n  return (\n    <Form\n      name=\"Product\"\n      onCancel={ () => window.location.href = makePath(['product']) }\n      onSubmit={ e => onSubmit(e) }\n    >\n      {inputs.map(input =>\n        <Input\n          key={ input.id }\n          id={ input.id }\n          name={ input.name }\n          label={ input.label }\n          type={ input.type }\n          min={ input.min }\n          max={ input.max }\n          placeHolder={ input.placeHolder }\n          value={ input.value }\n          onBlur={ input.onBlur }\n          onChange={ input.onChange }\n        />\n      )}\n    </Form>\n  );\n}\n\nexport default Add;","// External Import\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Functions\nimport { makePath } from '../../functions';\n\n// Components\nimport Input from '../../components/Input/Input';\nimport Form from '../../components/Form/Form';\n\nconst Edit = props => {\n  // State\n  const [inputs, setInputs] = useState([\n    {\n      id: \"sku\",\n      name: \"sku\",\n      label: \"SKU\",\n      type: \"text\",\n      min: \"3\",\n      max: \"20\",\n      placeHolder: \"Product Identifier\",\n      value: '',\n      onChange: e => changeInputValue(e)\n    },\n    {\n      id: \"name\",\n      name: \"name\",\n      label: \"Name\",\n      type: \"text\",\n      min: \"3\",\n      max: \"100\",\n      placeHolder: \"Product Name\",\n      value: '',\n      onChange: e => changeInputValue(e)\n    },\n    {\n      id: \"price\",\n      name: \"price\",\n      label: \"Price\",\n      type: \"number\",\n      min: \"0\",\n      value: '',\n      placeHolder: \"Product Price\",\n      onChange: e => changeInputValue(e)\n    },\n    {\n      id: \"min\",\n      name: \"min\",\n      label: \"Minimum Purchase Quantity\",\n      type: \"number\",\n      min: \"1\",\n      value: '',\n      placeHolder: \"Minimum Purchase Quantity\",\n      onChange: e => changeInputValue(e)\n    }\n  ]);\n\n  // Get and Set Product Info\n  useEffect(() => {\n    if (props.id) {\n      axios.get(makePath(['product', 'search', props.id], 'back'))\n      .then(res => {\n        if (res.status === 200) {\n          if (res.data.sku) {\n            const newInputs = inputs.slice();\n            newInputs.map((input, i) => {\n              newInputs[i].value = res.data[input.name];\n            });\n\n            setInputs(newInputs);\n          } else {\n            window.alert('Invalid Product')\n            window.location.href = makePath(['product'])\n\n          }\n        } else {\n          window.alert('Connection Error')\n          window.location.href = makePath(['product'])\n        }\n      })\n    } else {\n      window.alert('Invalid Product')\n      window.location.href = makePath(['product'])\n    }\n  }, []);\n\n  // Validation\n\n  // Check Form Data\n  const validation = data => {\n    if (data.sku.length < 3 || data.sku.length  > 20) {\n      return {\n        status: false,\n        msg: 'Invalid SKU'\n      }\n    }\n\n    if (data.name.length < 3 || data.name.length > 50) {\n      return {\n        status: false,\n        msg: 'Invalid Name'\n      }\n    }\n\n    if (data.price <= 0) {\n      return {\n        status: false,\n        msg: 'Invalid Price'\n      }\n    }\n\n    if (data.min != parseInt(data.min)) {\n      return {\n        status: false,\n        msg: 'Invalid Minimum Purchase Quantity'\n      }\n    }\n\n    return { status: true }\n  }\n\n  // Change State\n  const changeInputValue = e =>{\n    const newInputs = inputs.slice();\n    newInputs.map((input, i) => {\n      if(input.id === e.target.id){\n        newInputs[i].value = e.target.value;\n      }\n    });\n\n    setInputs(newInputs);\n  }\n\n  // Submit Form\n  const onSubmit = e => {\n    e.preventDefault();\n\n    let values = {};\n    inputs.map(input => values[input.name] = input.value)\n\n    let result = validation(values);\n\n    if (!result.status) {\n      window.alert(result.msg)\n      return false;\n    }\n\n    axios.post(makePath(['product', 'edit', props.id], 'back'), values)\n    .then(res => {\n      if (res.status === 200) {\n        if (res.data.status) {\n          window.alert('Product successfully updated')\n          window.location.href = makePath(['product'])\n        } else {\n          window.alert(res.data.msg)\n        }\n      } else {\n        window.alert('Connection Error')\n      }\n    })\n  }\n\n  return (\n    <Form\n      name=\"Product\"\n      onCancel={ () => window.location.href = makePath(['product']) }\n      onSubmit={ e => onSubmit(e) }\n    >\n      {inputs.map(input =>\n        <Input\n          key={ input.id }\n          id={ input.id }\n          name={ input.name }\n          label={ input.label }\n          type={ input.type }\n          min={ input.min }\n          max={ input.max }\n          placeHolder={ input.placeHolder }\n          value={ input.value }\n          onBlur={ input.onBlur }\n          onChange={ input.onChange }\n        />\n      )}\n    </Form>\n  );\n}\n\nexport default Edit;","// External Import\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Functions\nimport { makePath } from '../../functions';\n\n// Components\nimport Input from '../../components/Input/Input';\nimport Form from '../../components/Form/Form';\n\nconst View = props => {\n  // State\n  const [inputs, setInputs] = useState([\n    {\n      id: \"sku\",\n      name: \"sku\",\n      label: \"SKU\",\n      type: \"text\",\n      placeHolder: \"Product Identifier\",\n      value: ''\n    },\n    {\n      id: \"name\",\n      name: \"name\",\n      label: \"Name\",\n      type: \"text\",\n      placeHolder: \"Product Name\",\n      value: ''\n    },\n    {\n      id: \"price\",\n      name: \"price\",\n      label: \"Price\",\n      type: \"number\",\n      value: '',\n      placeHolder: \"Product Price\"\n    },\n    {\n      id: \"min\",\n      name: \"min\",\n      label: \"Minimum Purchase Quantity\",\n      type: \"number\",\n      value: '',\n      placeHolder: \"Minimum Purchase Quantity\"\n    }\n  ]);\n\n  // Get and Set Product Info\n  useEffect(() => {\n    if (props.id) {\n      axios.get(makePath(['product', 'search', props.id], 'back'))\n      .then(res => {\n        if (res.status === 200) {\n          if (res.data.sku) {\n            const newInputs = inputs.slice();\n            newInputs.map((input, i) => {\n              newInputs[i].value = res.data[input.name];\n            });\n\n            setInputs(newInputs);\n          } else {\n            window.alert('Invalid Product')\n            window.location.href = makePath(['product'])\n          }\n        } else {\n          window.alert('Connection Error')\n          window.location.href = makePath(['product'])\n        }\n      })\n    } else {\n      window.alert('Invalid Product')\n      window.location.href = makePath(['product'])\n    }\n  }, []);\n\n  return (\n    <Form\n      name=\"Product\"\n      onSubmit={ () => window.location.href = makePath(['product']) }\n    >\n      {inputs.map(input =>\n        <Input\n          view=\"1\"\n          key={ input.id }\n          id={ input.id }\n          name={ input.name }\n          label={ input.label }\n          type={ input.type }\n          placeHolder={ input.placeHolder }\n          value={ input.value }\n        />\n      )}\n    </Form>\n  );\n}\n\nexport default View;","// External Import\nimport React from 'react';\n\n// Functions\nimport { makePath } from '../../functions';\n\n// Style\nimport './style/ListItem.css';\n\n// Components\nimport Button from '../Button/Button';\n\n/*\nExemple:\n\n<ListItem\n  name=\"ListItemTile\"\n  subName=\"ListItemSubTitle\"\n  onDelete={ onDelete Function }\n/>\n*/\n\nconst ListItem = ({ name, subName, url, id, onDelete }) => {\n  return (\n    <li className=\"listItem-main\">\n      <div className=\"listItem-info\">\n        <span>{ name }</span>\n        <span>{ subName }</span>\n      </div>\n      <div className=\"listItem-buttons\">\n        <Button\n          name=\"View\"\n          color=\"blue\"\n          click={ () => window.location.href = makePath([url, 'view', id]) }\n        />\n        <Button\n          name=\"Edit\"\n          color=\"green\"\n          click={ () => window.location.href = makePath([url, 'edit', id]) }\n        />\n        <Button\n          name=\"Delete\"\n          color=\"red\"\n          click={ () => onDelete(id) }\n        />\n      </div>\n    </li>\n  );\n}\n\nexport default ListItem;","// External Import\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Functions\nimport { makePath } from '../../functions';\n\n// Components\nimport Button from '../../components/Button/Button';\nimport ListItem from '../../components/ListItem/ListItem';\n\nconst List = () => {\n  const [ products, setProducts ] = useState([]);\n\n  useEffect(() => getProducts(), []);\n\n  // Delete Product\n  const confirmDelete = id => {\n    if (window.confirm('Are you sure you want to delete this product?')) {\n      axios.delete(makePath(['product', 'delete', id], 'back'))\n      .then(res => {\n        if (res.status === 200) {\n          getProducts();\n        }\n      })\n    }\n  }\n\n  // Update Products\n  const getProducts = () => {\n    axios.get(makePath(['product'], 'back'))\n    .then(res => {\n      if (res.status === 200) {\n        setProducts(res.data);\n      }\n    })\n  }\n\n  return (\n    <div className=\"list-main\">\n      <div className=\"list-header\">\n        <h2>Products</h2>\n        <Button\n          name=\"New\"\n          color=\"green\"\n          click={ () => window.location.href = makePath(['product', 'add']) }\n        />\n      </div>\n      <div className=\"list-content\">\n        <ul>\n          {products.map(product =>\n            <ListItem\n              key={ product._id }\n              name={ product.name }\n              subName={ \"SKU: \"+product.sku }\n              url={ 'product' }\n              id={ product._id }\n              onDelete={ id => confirmDelete(id) }\n            />\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default List;","import React from 'react';\n\n// Pages\nimport Add from './Add';\nimport Edit from './Edit';\nimport View from './View';\nimport List from './List';\n\n// Render\nconst Product = props => {\n  switch (props.action) {\n    case 'add':\n      return <Add/>;\n    case 'edit':\n      return <Edit id={ props.id }/>;\n    case 'view':\n      return <View id={ props.id }/>;\n    default:\n      return <List/>;\n  }\n}\n\nexport default Product;","import React from 'react';\nimport './style/Select.css';\n\n/**\nExemple:\n\n<Select\n  view = Flag ReadOnly\n  name = Field Name\n  value = Default / Current Value\n  options = [\n    {\n     value = Option Value\n     name = Option Name\n    }\n  ]\n/>\n */\n\nconst Select = props => {\n  const change = e => {\n    if (props.onChange) {\n      props.onChange(e)\n    }\n  }\n\n  return (\n    <div className={ \"select-main\"+(props.divClass ? \" \"+props.divClass : \"\") }>\n      <div className=\"select-header\">\n        <span>{ props.label }</span>\n      </div>\n      <div className=\"select-content\">\n        <select\n          readonly={ props.view }\n          value={ props.value }\n          name={ props.name }\n          onChange={ e => change(e) }\n          className={ \"select-select\"+(props.className ? \" \"+props.className : \"\") }\n        >\n          { props.options.map(option =>\n            <option key={ option.value } value={ option.value }>\n              { option.name }\n            </option>\n          ) }\n        </select>\n      </div>\n    </div>\n  );\n}\n\nexport default Select;","// External Import\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\n\n// Functions\nimport { makePath, formatUSD } from '../../functions';\n\n// Style\nimport './style/Add.css';\n\n// Components\nimport Select from '../../components/Select/Select';\nimport Button from '../../components/Button/Button';\nimport Input from '../../components/Input/Input';\n\nconst Add = () => {\n  // Registered Customers\n  const [ customersToSelect, setCustomersToSelect ] = useState([]);\n  // Registered Products\n  const [ productsToSelect, setProductsToSelect ] = useState([]);\n  // Products Information\n  const [ productsInfo, setProductsInfo ] = useState({});\n  // Sale Data\n  const [ sale, setSale ] = useState({\n    customer: '',\n    total: 0\n  });\n  // Sale Products\n  const [ products, setProducts ] = useState([{\n    profitability: 'none',\n    product: '',\n    price: '',\n    qtd: ''\n  }]);\n\n  useEffect(() => {\n    // Calculates the Total\n    const newSale = Object.assign({}, sale);\n    var newTotal = 0;\n    products.forEach(product => {\n      // Ignores Unfilled Products\n      if (!['', 0].includes(product.price) && !['', 0].includes(product.qtd)) {\n        newTotal += (product.price * product.qtd);\n      }\n    });\n    newSale.total = newTotal;\n    setSale(newSale);\n\n    // Search for Customers and Products\n    if (!customersToSelect || customersToSelect.length == 0) {\n      // Search for Customers\n      axios.get(makePath(['customer'], 'back'))\n      .then(res => {\n        if (res.status === 200) {\n          let cust = [{value: '', name: 'None Selected'}];\n\n          if (res.data) {\n            for (let customer of res.data) {\n              cust.push({\n                value: customer._id,\n                name: customer.fname+' '+customer.lname\n              })\n            }\n          }\n\n          setCustomersToSelect(cust);\n        }\n      });\n\n      // Search for Products\n      axios.get(makePath(['product'], 'back'))\n      .then(res => {\n        if (res.status === 200) {\n          let prodsToSelect = [{value: '', name: 'None Selected'}];\n          let prods = {};\n\n          if (res.data) {\n            for (let product of res.data) {\n              prodsToSelect.push({\n                value: product._id,\n                name: product.name\n              });\n\n              prods[product._id] = product;\n            }\n          }\n\n          setProductsInfo(prods);\n          setProductsToSelect(prodsToSelect);\n        }\n      });\n    }\n  }, [products]);\n\n  // Determines the minimum sell quantity\n  const minQtd = index => {\n    if (products[index] && products[index].product != '') {\n      return productsInfo[products[index].product].min;\n    } else {\n      return \"1\"\n    }\n  }\n\n  // Validates sale data\n  const validate = () => {\n    const saleInfo = { products: [] };\n\n    if (sale.customer.length < 1) {\n      window.alert('Customer is required');\n      return;\n    } else {\n      saleInfo.customer = sale.customer;\n    }\n\n    if (sale.total <= 0) {\n      window.alert('Sale Total must be greater than Zero');\n      return;\n    }\n\n    if (products.length < 1) {\n      window.alert('Sale must have at least one product');\n      return;\n    }\n\n    let stop = false;\n    for (let product of products) {\n      if (product.product && productsInfo[product.product]) {\n        if (isNaN(product.qtd)) {\n          window.alert('Product '+productsInfo[product.product].name+' Has Invalid Quantity, Must be at least '+productsInfo[product.product].min);\n          stop = true;\n          break;\n        }\n\n        if (!['good', 'great'].includes(product.profitability)) {\n          window.alert('Product '+productsInfo[product.product].name+' Has Invalid Profitability, Increase the Sell Price');\n          stop = true;\n          break;\n        }\n\n        if (!checkQtd(product.product, product.qtd)) break;\n\n        saleInfo.products.push(product);\n      }\n    }\n\n    if (stop) return;\n\n    if (saleInfo.products.length < 1) {\n      window.alert('Sale must have at least one product');\n      return;\n    }\n\n    // Submit Form\n    axios.post(makePath(['sale', 'add'], 'back'), saleInfo)\n    .then(res => {\n      if (res.status === 200) {\n        if (res.data.status) {\n          window.alert('Sale successfully registered')\n          window.location.href = makePath(['sale'])\n        } else {\n          window.alert(res.data.msg)\n        }\n      } else {\n        window.alert('Connection Error')\n      }\n    })\n  }\n\n  // Check if selected qtd is multiple of minimum qtd\n  const checkQtd = (id, qtd) => {\n    if (id) {\n      let minQtd = productsInfo[id].min;\n      let newQtd = parseInt(qtd);\n\n      if (newQtd < minQtd) {\n        window.alert('Product '+productsInfo[id].name+' Has Invalid Quantity, Must be at least '+productsInfo[id].min);\n        return false;\n      } else if (newQtd > 0) {\n        let up = Math.ceil(newQtd / minQtd) * minQtd;\n  \n        if (up != newQtd) {\n          let down = Math.floor(newQtd / minQtd) * minQtd;\n  \n          window.alert('Product '+productsInfo[id].name+' Has Invalid Quantity, try '+down+' or '+up);\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  // Add product to list\n  const addProduct = () => {\n    var newProducts = products.slice();\n    newProducts.unshift({\n      profitability: 'none',\n      product: '',\n      price: '',\n      qtd: ''\n    });\n    setProducts(newProducts);\n  }\n\n  // Remove product from list\n  const removeProduct = index => {\n    const newProducts = products.slice();\n    delete newProducts[index];\n    setProducts(newProducts);\n  }\n\n  // Change Customer\n  const selectCustomer = e => {\n    const newSale = Object.assign({}, sale);\n    newSale.customer = e.target.value\n    setSale(newSale);\n  }\n\n  // Change Product\n  const changeProduct = (index, e) => {\n    const newProducts = products.slice();\n\n    newProducts[index].product = e.target.value;\n    newProducts[index].price = productsInfo[e.target.value].price;\n    newProducts[index].qtd = productsInfo[e.target.value].min;\n    newProducts[index].profitability = 'good';\n\n    setProducts(newProducts);\n  }\n\n  // Change Product Info (Qtd or Price)\n  const handleChange = (input, index, e) => {\n    const newProducts = products.slice();\n\n    if (newProducts[index].product == '') {\n      window.alert('No Product Selected');\n      return;\n    }\n\n    newProducts[index][input] = e.target.value;\n\n    if (input === 'price') {\n      let originalPrice = productsInfo[newProducts[index].product].price;\n      let actualPrice = (!isNaN(e.target.value) ? e.target.value : 1.00);\n\n      if (actualPrice > originalPrice) {\n        newProducts[index].profitability = 'great';\n      } else if (actualPrice >= (originalPrice * 0.9)) {\n        newProducts[index].profitability = 'good';\n      } else {\n        newProducts[index].profitability = 'bad';\n      }\n    }\n\n    setProducts(newProducts);\n  }\n\n  // Render\n  return (\n    <div className=\"sale-form-main form-main\">\n      <div className=\"form-header\">\n        <h2>Sale</h2>\n        <h4>Total: { formatUSD.format(sale.total) }</h4>\n      </div>\n      <div className=\"sale-form-content form-content\">\n        <div>\n          <Select\n            name=\"customer\"\n            label=\"Customer\"\n            value={ sale.customer }\n            options={ customersToSelect }\n            divClass=\"form-content-1\"\n            onChange={ e => selectCustomer(e) }\n          />\n          <Button\n            name=\"Add Product\"\n            color=\"green\"\n            divClass=\"form-content-2\"\n            click={ () => addProduct() }\n          />\n        </div>\n        <div className=\"sale-products\">\n          { products.map((product, index) =>\n            <div key={ index } className=\"sale-item\">\n              <div>\n                <span><b>Total:</b> { formatUSD.format(product.price * product.qtd) }</span>\n                <span><b>Min Qtd:</b> { minQtd(index) }</span>\n                <div>\n                  <span><b>Profitability:</b> </span>\n                  <span className={ \"proft \" + product.profitability }>\n                    { product.profitability.toUpperCase() }\n                  </span>\n                </div>\n              </div>\n              <Select\n                name=\"product\"\n                label=\"Product\"\n                value={ product.product }\n                options={ productsToSelect }\n                onChange={ e => changeProduct(index, e) }\n              />\n              <Input\n                type=\"number\"\n                id= { product.product }\n                min=\"0\"\n                name=\"qtd\"\n                label=\"Quantity\"\n                value={ product.qtd }\n                placeHolder=\"Quantity\"\n                onBlur= { e => checkQtd(e.target.id, e.target.value)}\n                onChange={ e => handleChange('qtd', index, e) }\n              />\n              <Input\n                type=\"number\"\n                id={ \"price\"+index }\n                min=\"0\"\n                name=\"price\"\n                label=\"Sell Price\"\n                value={ product.price }\n                placeHolder=\"Sell Price\"\n                onChange={ e => handleChange('price', index, e) }\n              />\n              <Button\n                color=\"red tiny\"\n                click={ () => removeProduct(index) }\n              >\n                <FontAwesomeIcon className=\"nav-icon\" icon=\"trash-alt\"/>\n              </Button>\n            </div>\n          ) }\n        </div>\n      </div>\n      <div className=\"form-footer\">\n        <div className=\"form-buttons\">\n          <Button\n            name=\"Cancel\"\n            color=\"red\"\n            click={ () => window.location.href = makePath(['sale']) }\n          />\n          <Button\n            name=\"Confirm\"\n            color=\"green\"\n            submit=\"1\"\n            click={ () => validate() }\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Add;","// External Import\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\n\n// Functions\nimport { makePath, formatUSD } from '../../functions';\n\n// Style\nimport './style/Add.css';\n\n// Components\nimport Select from '../../components/Select/Select';\nimport Button from '../../components/Button/Button';\nimport Input from '../../components/Input/Input';\n\nconst Edit = props => {\n  // Registered Customers\n  const [ customersToSelect, setCustomersToSelect ] = useState([]);\n  // Registered Products\n  const [ productsToSelect, setProductsToSelect ] = useState([]);\n  // Products Information\n  const [ productsInfo, setProductsInfo ] = useState({});\n  // Sale Data\n  const [ sale, setSale ] = useState({\n    customer: '',\n    total: 0\n  });\n  // Sale Products\n  const [ products, setProducts ] = useState([{\n    profitability: 'none',\n    product: '',\n    price: '',\n    qtd: ''\n  }]);\n\n  useEffect(() => {\n    // Calculates the Total\n    const newSale = Object.assign({}, sale);\n    var newTotal = 0;\n    products.forEach(product => {\n      if (!['', 0].includes(product.price) && !['', 0].includes(product.qtd)) {\n        newTotal += (product.price * product.qtd);\n      }\n    });\n    newSale.total = newTotal;\n    setSale(newSale);\n\n    // Search for Customers and Products\n    if (!customersToSelect || customersToSelect.length == 0) {\n      axios.get(makePath(['customer'], 'back'))\n      .then(res => {\n        if (res.status === 200) {\n          let cust = [{value: '', name: 'None Selected'}];\n\n          if (res.data) {\n            for (let customer of res.data) {\n              cust.push({\n                value: customer._id,\n                name: customer.fname+' '+customer.lname\n              })\n            }\n\n            setCustomersToSelect(cust);\n          } else {\n            window.alert('No Registered Customers')\n            window.location.href = makePath(['sale'])\n          }\n\n        } else {\n          window.alert('No Registered Customers')\n          window.location.href = makePath(['sale'])\n        }\n      });\n\n      axios.get(makePath(['product'], 'back'))\n      .then(res => {\n        if (res.status === 200) {\n          let prodsToSelect = [{value: '', name: 'None Selected'}];\n          let prods = {};\n\n          if (res.data) {\n            for (let product of res.data) {\n              prodsToSelect.push({\n                value: product._id,\n                name: product.name\n              });\n\n              prods[product._id] = product;\n            }\n\n            setProductsInfo(prods);\n            setProductsToSelect(prodsToSelect);\n\n            if (props.id) {\n              axios.get(makePath(['sale', 'search', props.id], 'back'))\n              .then(res => {\n                if (res.status === 200) {\n                  if (res.data.customer) {\n                    setSale({\n                      customer: res.data.customer,\n                      total: res.data.total\n                    });\n                    setProducts(res.data.products);\n                  } else {\n                    window.alert('Invalid Sale')\n                    window.location.href = makePath(['sale']);\n                  }\n                } else {\n                  window.alert('Connection Error')\n                  window.location.href = makePath(['sale'])\n                }\n              })\n            } else {\n              window.alert('Invalid Sale')\n              window.location.href = makePath(['sale'])\n            }\n          } else {\n            window.alert('No Registered Products')\n            window.location.href = makePath(['sale'])\n          }\n        } else {\n          window.alert('No Registered Products')\n          window.location.href = makePath(['sale'])\n        }\n      });\n    }\n  }, [products]);\n\n  // Determines the minimum sell quantity\n  const minQtd = index => {\n    if (products[index] && products[index].product != '') {\n      return productsInfo[products[index].product].min;\n    } else {\n      return \"1\"\n    }\n  }\n\n  // Validates sale data\n  const validate = () => {\n    const saleInfo = { products: [] };\n\n    if (sale.customer.length < 1) {\n      window.alert('Customer is required');\n      return;\n    } else {\n      saleInfo.customer = sale.customer;\n    }\n\n    if (sale.total <= 0) {\n      window.alert('Sale Total must be greater than Zero');\n      return;\n    }\n\n    if (products.length < 1) {\n      window.alert('Sale must have at least one product');\n      return;\n    }\n\n    let stop = false;\n    for (let product of products) {\n      if (product.product && productsInfo[product.product]) {\n        if (isNaN(product.qtd)) {\n          window.alert('Product '+productsInfo[product.product].name+' Has Invalid Quantity, Must be at least '+productsInfo[product.product].min);\n          stop = true;\n          break;\n        }\n\n        if (!['good', 'great'].includes(product.profitability)) {\n          window.alert('Product '+productsInfo[product.product].name+' Has Invalid Profitability, Increase the Sell Price');\n          stop = true;\n          break;\n        }\n\n        if (!checkQtd(product.product, product.qtd)) break;\n\n        saleInfo.products.push(product);\n      }\n    }\n\n    if (stop) return;\n\n    if (saleInfo.products.length < 1) {\n      window.alert('Sale must have at least one product');\n      return;\n    }\n\n    axios.post(makePath(['sale', 'edit', props.id], 'back'), saleInfo)\n    .then(res => {\n      if (res.status === 200) {\n        if (res.data.status) {\n          window.alert('Sale successfully updated')\n          window.location.href = makePath(['sale'])\n        } else {\n          window.alert(res.data.msg)\n        }\n      } else {\n        window.alert('Connection Error')\n      }\n    })\n  }\n\n  // Check if selected qtd is multiple of minimum qtd\n  const checkQtd = (id, qtd) => {\n    if (id) {\n      let minQtd = productsInfo[id].min;\n      let newQtd = parseInt(qtd);\n\n      if (newQtd < minQtd) {\n        window.alert('Product '+productsInfo[id].name+' Has Invalid Quantity, Must be at least '+productsInfo[id].min);\n        return false;\n      } else if (newQtd > 0) {\n        let up = Math.ceil(newQtd / minQtd) * minQtd;\n\n        if (up != newQtd) {\n          let down = Math.floor(newQtd / minQtd) * minQtd;\n\n          window.alert('Product '+productsInfo[id].name+' Has Invalid Quantity, try '+down+' or '+up);\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  // Add product to list\n  const addProduct = () => {\n    var newProducts = products.slice();\n    newProducts.unshift({\n      profitability: 'none',\n      product: '',\n      price: '',\n      qtd: ''\n    });\n    setProducts(newProducts);\n  }\n\n  // Remove product from list\n  const removeProduct = index => {\n    const newProducts = products.slice();\n    delete newProducts[index];\n    setProducts(newProducts);\n  }\n\n  // Change Customer\n  const selectCustomer = e => {\n    const newSale = Object.assign({}, sale);\n    newSale.customer = e.target.value\n    setSale(newSale);\n  }\n\n  // Change Product\n  const changeProduct = (index, e) => {\n    const newProducts = products.slice();\n\n    newProducts[index].product = e.target.value;\n    newProducts[index].price = productsInfo[e.target.value].price;\n    newProducts[index].qtd = productsInfo[e.target.value].min;\n    newProducts[index].profitability = 'good';\n\n    setProducts(newProducts);\n  }\n\n  // Change Product Info (Qtd or Price)\n  const handleChange = (input, index, e) => {\n    const newProducts = products.slice();\n\n    if (newProducts[index].product == '') {\n      window.alert('No Product Selected');\n      return;\n    }\n\n    newProducts[index][input] = e.target.value;\n\n    if (input === 'price') {\n      let originalPrice = productsInfo[newProducts[index].product].price;\n      let actualPrice = (!isNaN(e.target.value) ? e.target.value : 1.00);\n\n      if (actualPrice > originalPrice) {\n        newProducts[index].profitability = 'great';\n      } else if (actualPrice >= (originalPrice * 0.9)) {\n        newProducts[index].profitability = 'good';\n      } else {\n        newProducts[index].profitability = 'bad';\n      }\n    }\n\n    setProducts(newProducts);\n  }\n\n  // Render\n  return (\n    <div className=\"sale-form-main form-main\">\n      <div className=\"form-header\">\n        <h2>Sale</h2>\n        <h4>Total: { formatUSD.format(sale.total) }</h4>\n      </div>\n      <div className=\"sale-form-content form-content\">\n        <div>\n          <Select\n            name=\"customer\"\n            label=\"Customer\"\n            value={ sale.customer }\n            options={ customersToSelect }\n            divClass=\"form-content-1\"\n            onChange={ e => selectCustomer(e) }\n          />\n          <Button\n            name=\"Add Product\"\n            color=\"green\"\n            divClass=\"form-content-2\"\n            click={ () => addProduct() }\n          />\n        </div>\n        <div className=\"sale-products\">\n          { products.map((product, index) =>\n            <div key={ index } className=\"sale-item\">\n              <div>\n                <span><b>Total:</b> { formatUSD.format(product.price * product.qtd) }</span>\n                <span><b>Min Qtd:</b> { minQtd(index) }</span>\n                <div>\n                  <span><b>Profitability:</b> </span>\n                  <span className={ \"proft \" + product.profitability }>\n                    { product.profitability.toUpperCase() }\n                  </span>\n                </div>\n              </div>\n              <Select\n                name=\"product\"\n                label=\"Product\"\n                value={ product.product }\n                options={ productsToSelect }\n                onChange={ e => changeProduct(index, e) }\n              />\n              <Input\n                type=\"number\"\n                id= { product.product }\n                min=\"0\"\n                name=\"qtd\"\n                label=\"Quantity\"\n                value={ product.qtd }\n                placeHolder=\"Quantity\"\n                onBlur= { e => checkQtd(e.target.id, e.target.value)}\n                onChange={ e => handleChange('qtd', index, e) }\n              />\n              <Input\n                type=\"number\"\n                min=\"0\"\n                name=\"price\"\n                label=\"Sell Price\"\n                value={ product.price }\n                placeHolder=\"Sell Price\"\n                onChange={ e => handleChange('price', index, e) }\n              />\n              <Button\n                color=\"red tiny\"\n                click={ () => removeProduct(index) }\n              >\n                <FontAwesomeIcon className=\"nav-icon\" icon=\"trash-alt\"/>\n              </Button>\n            </div>\n          ) }\n        </div>\n      </div>\n      <div className=\"form-footer\">\n        <div className=\"form-buttons\">\n          <Button\n            name=\"Cancel\"\n            color=\"red\"\n            click={ () => window.location.href = makePath(['sale']) }\n          />\n          <Button\n            name=\"Confirm\"\n            color=\"green\"\n            submit=\"1\"\n            click={ () => validate() }\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Edit;","// External Import\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Functions\nimport { makePath, formatUSD } from '../../functions';\n\n// Style\nimport './style/Add.css';\n\n// Components\nimport Select from '../../components/Select/Select';\nimport Button from '../../components/Button/Button';\nimport Input from '../../components/Input/Input';\n\nconst Add = props => {\n  // Registered Customers\n  const [ customersToSelect, setCustomersToSelect ] = useState([]);\n  // Registered Products\n  const [ productsToSelect, setProductsToSelect ] = useState([]);\n  // Sale Data\n  const [ sale, setSale ] = useState({\n    customer: '',\n    total: 0\n  });\n  // Sale Products\n  const [ products, setProducts ] = useState([{\n    profitability: 'none',\n    product: '',\n    price: '',\n    qtd: ''\n  }]);\n\n  useEffect(() => {\n    // Search for Customers and Products\n    if (!customersToSelect || customersToSelect.length == 0) {\n      axios.get(makePath(['customer'], 'back'))\n      .then(res => {\n        if (res.status === 200) {\n          let cust = [{value: '', name: 'None Selected'}];\n\n          if (res.data) {\n            for (let customer of res.data) {\n              cust.push({\n                value: customer._id,\n                name: customer.fname+' '+customer.lname\n              })\n            }\n\n            setCustomersToSelect(cust);\n          } else {\n            window.alert('No Registered Customers')\n            window.location.href = makePath(['sale'])\n          }\n\n        } else {\n          window.alert('No Registered Customers')\n          window.location.href = makePath(['sale'])\n        }\n      });\n\n      axios.get(makePath(['product'], 'back'))\n      .then(res => {\n        if (res.status === 200) {\n          let prodsToSelect = [{value: '', name: 'None Selected'}];\n          let prods = {};\n\n          if (res.data) {\n            for (let product of res.data) {\n              prodsToSelect.push({\n                value: product._id,\n                name: product.name\n              });\n\n              prods[product._id] = product;\n            }\n\n            setProductsToSelect(prodsToSelect);\n\n            if (props.id) {\n              axios.get(makePath(['sale', 'search', props.id], 'back'))\n              .then(res => {\n                if (res.status === 200) {\n                  if (res.data.customer) {\n                    setSale({\n                      customer: res.data.customer,\n                      total: res.data.total\n                    });\n                    setProducts(res.data.products);\n                  } else {\n                    window.alert('Invalid Sale')\n                    window.location.href = makePath(['sale']);\n                  }\n                } else {\n                  window.alert('Connection Error')\n                  window.location.href = makePath(['sale'])\n                }\n              })\n            } else {\n              window.alert('Invalid Sale')\n              window.location.href = makePath(['sale'])\n            }\n          } else {\n            window.alert('No Registered Products')\n            window.location.href = makePath(['sale'])\n          }\n        } else {\n          window.alert('No Registered Products')\n          window.location.href = makePath(['sale'])\n        }\n      });\n    }\n  }, []);\n\n  const calcTot = () => {\n    // Calculates the Total\n    const newSale = Object.assign({}, sale);\n    var newTotal = 0;\n    products.forEach(product => {\n      if (!['', 0].includes(product.price) && !['', 0].includes(product.qtd)) {\n        newTotal += (product.price * product.qtd);\n      }\n    });\n    return newTotal;\n  }\n\n  // Render\n  return (\n    <div className=\"sale-form-main form-main\">\n      <div className=\"form-header\">\n        <h2>Sale</h2>\n        <h4>Total: { formatUSD.format(calcTot()) }</h4>\n      </div>\n      <div className=\"sale-form-content form-content\">\n        <div>\n          <Select\n            view=\"1\"\n            name=\"customer\"\n            label=\"Customer\"\n            value={ sale.customer }\n            options={ customersToSelect }\n            divClass=\"form-content-1\"\n          />\n          <div></div>\n        </div>\n        <div className=\"sale-products\">\n          { products.map((product, index) =>\n            <div key={ index } className=\"sale-item\">\n              <div>\n                <span><b>Total:</b> { formatUSD.format(product.price * product.qtd) }</span>\n                <span></span>\n                <div>\n                  <span><b>Profitability:</b> </span>\n                  <span className={ \"proft \" + product.profitability }>\n                    { product.profitability.toUpperCase() }\n                  </span>\n                </div>\n              </div>\n              <Select\n                view=\"1\"\n                name=\"product\"\n                label=\"Product\"\n                value={ product.product }\n                options={ productsToSelect }\n              />\n              <Input\n                view=\"1\"\n                type=\"number\"\n                id= { product.product }\n                min=\"0\"\n                name=\"qtd\"\n                label=\"Quantity\"\n                value={ product.qtd }\n                placeHolder=\"Quantity\"\n              />\n              <Input\n                view=\"1\"\n                type=\"number\"\n                min=\"0\"\n                name=\"price\"\n                label=\"Sell Price\"\n                value={ product.price }\n                placeHolder=\"Sell Price\"\n              />\n              <div></div>\n            </div>\n          ) }\n        </div>\n      </div>\n      <div className=\"form-footer\">\n        <div className=\"form-buttons\">\n          <Button\n            name=\"Confirm\"\n            color=\"green\"\n            submit=\"1\"\n            click={ () => window.location.href = makePath(['sale']) }\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Add;","// External Import\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Functions\nimport { makePath, formatUSD } from '../../functions';\n\n// Components\nimport Button from '../../components/Button/Button';\nimport ListItem from '../../components/ListItem/ListItem';\n\nconst List = () => {\n  const [ sales, setSales ] = useState([]);\n\n  // Get all Sales\n  useEffect(() => getSales(), []);\n\n  // Delete Sale\n  const confirmaDelete = id => {\n    if (window.confirm('Are you sure you want to delete this sale?')) {\n      axios.delete(makePath(['sale', 'delete', id], 'back'))\n      .then(res => {\n        if (res.status === 200) {\n          getSales();\n        }\n      })\n    }\n  }\n\n  // Update Sales\n  const getSales = () => {\n    axios.get(makePath(['sale'], 'back'))\n    .then(res => {\n      if (res.status === 200) {\n        setSales(res.data);\n      }\n    })\n  }\n\n  // Set the total value of the sale\n  const totalSum = products => {\n    let total = 0;\n\n    for (let product of products) {\n      total += (product.qtd * product.price);\n    }\n\n    return formatUSD.format(total);\n  }\n\n  // Render\n  return (\n    <div className=\"list-main\">\n      <div className=\"list-header\">\n        <h2>Sales</h2>\n        <Button\n          name=\"New\"\n          color=\"green\"\n          click={ () => window.location.href = makePath(['sale', 'add']) }\n        />\n      </div>\n      <div className=\"list-content\">\n        <ul>\n          {sales.map(sale =>\n            <ListItem\n              key={ sale._id }\n              name={ sale.customer.fname+' '+sale.customer.lname }\n              subName={ \"Total: \"+totalSum(sale.products) }\n              url={ 'sale' }\n              id={ sale._id }\n              onDelete={ id => confirmaDelete(id) }\n            />\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default List;","import React from 'react';\n\n// Pages\nimport Add from './Add';\nimport Edit from './Edit';\nimport View from './View';\nimport List from './List';\n\n// Render\nconst Sale = props => {\n  switch (props.action) {\n    case 'add':\n      return <Add/>;\n    case 'edit':\n      return <Edit id={ props.id }/>;\n    case 'view':\n      return <View id={ props.id }/>;\n    default:\n      return <List/>;\n  }\n}\n\nexport default Sale;","// External Import\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\n// Functions\nimport { checkCPF, makePath } from '../../functions';\n\n// Components\nimport Input from '../../components/Input/Input';\nimport Form from '../../components/Form/Form';\n\nconst Add = () => {\n  // State\n  const [inputs, setInputs] = useState([\n    {\n      id: \"cpf\",\n      name: \"cpf\",\n      label: \"Customer CPF\",\n      type: \"text\",\n      min: \"11\",\n      max: \"11\",\n      placeHolder: \"CPF\",\n      value: '',\n      onBlur: e => validateCPF(e),\n      onChange: e => changeInputValue(e)\n    },\n    {\n      id: \"fname\",\n      name: \"fname\",\n      label: \"First Name\",\n      type: \"text\",\n      min: \"75\",\n      max: \"75\",\n      value: '',\n      placeHolder: \"First Name\",\n      onChange: e => changeInputValue(e)\n    },\n    {\n      id: \"lname\",\n      name: \"lname\",\n      label: \"Last Name\",\n      type: \"text\",\n      min: \"75\",\n      max: \"75\",\n      value: '',\n      placeHolder: \"Last Name\",\n      onChange: e => changeInputValue(e)\n    }\n  ]);\n\n  // Validation\n\n  // Cpf\n  const validateCPF = e => {\n    if (!checkCPF(e.target.value)) window.alert('Invalid CPF');\n  }\n\n  // Form Data\n  const validation = data => {\n    if (!checkCPF(data.cpf)) {\n      return {\n        status: false,\n        msg: 'Invalid CPF'\n      }\n    }\n\n    if (data.fname.length < 3 || data.fname.length > 50) {\n      return {\n        status: false,\n        msg: 'Invalid First Name'\n      }\n    }\n\n    if (data.lname.length < 3 || data.lname.length > 50) {\n      return {\n        status: false,\n        msg: 'Invalid Last Name'\n      }\n    }\n\n    return { status: true }\n  }\n\n  // Change State\n  const changeInputValue = e =>{\n    const newInputs = inputs.slice();\n    newInputs.map((input, i) => {\n      if(input.id === e.target.id){\n        newInputs[i].value = e.target.value;\n      }\n    });\n\n    setInputs(newInputs);\n  }\n\n  // Submit Form Data\n  const onSubmit = e => {\n    e.preventDefault();\n\n    // Format Data\n    let values = {};\n    for (let input of inputs) {\n      values[input.name] = input.value;\n    }\n\n    // Check Customer Data\n    let result = validation(values);\n    if (!result.status) {\n      window.alert(result.msg)\n      return false;\n    }\n\n    axios.post(makePath(['customer', 'add'], 'back'), values)\n    .then(res => {\n      if (res.status === 200) {\n        if (res.data.status) {\n          window.alert('Customer successfully registered')\n          window.location.href = makePath(['customer'])\n        } else {\n          window.alert(res.data.msg)\n        }\n      } else {\n        window.alert('Connection Error')\n      }\n    })\n  }\n\n  return (\n    <Form\n      name=\"Customer\"\n      onCancel={ () => window.location.href = makePath(['customer']) }\n      onSubmit={ e => onSubmit(e) }\n    >\n      {inputs.map(input =>\n        <Input\n          key={ input.id }\n          id={ input.id }\n          name={ input.name }\n          label={ input.label }\n          type={ input.type }\n          min={ input.min }\n          max={ input.max }\n          placeHolder={ input.placeHolder }\n          value={ input.value }\n          onBlur={ input.onBlur }\n          onChange={ input.onChange }\n        />\n      )}\n    </Form>\n  );\n}\n\nexport default Add;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { checkCPF, makePath } from '../../functions';\n\nimport Input from '../../components/Input/Input';\nimport Form from '../../components/Form/Form';\n\nconst Edit = props => {\n  // State\n  const [inputs, setInputs] = useState([\n    {\n      id: \"cpf\",\n      name: \"cpf\",\n      label: \"Customer CPF\",\n      type: \"text\",\n      min: \"11\",\n      max: \"11\",\n      placeHolder: \"CPF\",\n      value: '',\n      onBlur: e => validateCPF(e),\n      onChange: e => changeInputValue(e)\n    },\n    {\n      id: \"fname\",\n      name: \"fname\",\n      label: \"First Name\",\n      type: \"text\",\n      min: \"75\",\n      max: \"75\",\n      value: '',\n      placeHolder: \"First Name\",\n      onChange: e => changeInputValue(e)\n    },\n    {\n      id: \"lname\",\n      name: \"lname\",\n      label: \"Last Name\",\n      type: \"text\",\n      min: \"75\",\n      max: \"75\",\n      value: '',\n      placeHolder: \"Last Name\",\n      onChange: e => changeInputValue(e)\n    }\n  ]);\n\n  // Get and Set the Customer Info\n  useEffect(() => {\n    if (props.id) {\n      axios.get(makePath(['customer', 'search', props.id], 'back'))\n      .then(res => {\n        if (res.status === 200) {\n          if (res.data.cpf) {\n            const newInputs = inputs.slice();\n            newInputs.map((input, i) => {\n              newInputs[i].value = res.data[input.name];\n            });\n\n            setInputs(newInputs);\n          } else {\n            window.alert('Invalid Customer')\n            window.location.href = makePath(['customer'])\n\n          }\n        } else {\n          window.alert('Connection Error')\n          window.location.href = makePath(['customer'])\n        }\n      })\n    } else {\n      window.alert('Invalid Customer')\n      window.location.href = makePath(['customer'])\n    }\n  }, []);\n\n  // Validation\n\n  // Cpf\n  const validateCPF = e => {\n    if (!checkCPF(e.target.value)) window.alert('Invalid CPF');\n  }\n\n  // Form Data\n  const validation = data => {\n    if (!checkCPF(data.cpf)) {\n      return {\n        status: false,\n        field: 'cpf',\n        msg: 'Invalid CPF'\n      }\n    }\n\n    if (data.fname.length < 3 || data.fname.length > 50) {\n      return {\n        status: false,\n        field: 'fname',\n        msg: 'Invalid First Name'\n      }\n    }\n\n    if (data.lname.length < 3 || data.lname.length > 50) {\n      return {\n        status: false,\n        field: 'lname',\n        msg: 'Invalid Last Name'\n      }\n    }\n\n    return { status: true }\n  }\n\n  // Change State\n  const changeInputValue = e =>{\n    const newInputs = inputs.slice();\n    newInputs.map((input, i) => {\n      if(input.id === e.target.id){\n        newInputs[i].value = e.target.value;\n      }\n    });\n\n    setInputs(newInputs);\n  }\n\n  // Submit Form Data\n  const onSubmit = e => {\n    e.preventDefault();\n\n    // Format Data\n    let values = {};\n    inputs.map(input => values[input.name] = input.value)\n\n    // Check Product Data\n    let result = validation(values);\n    if (!result.status) {\n      window.alert(result.msg)\n      return false;\n    }\n\n    axios.post(makePath(['customer', 'edit', props.id], 'back'), values)\n    .then(res => {\n      if (res.status === 200) {\n        if (res.data.status) {\n          window.alert('Customer successfully updated')\n          window.location.href = makePath(['customer'])\n        } else {\n          window.alert(res.data.msg)\n        }\n      } else {\n        window.alert('Connection Error')\n      }\n    })\n  }\n\n  return (\n    <Form\n      name=\"Customer\"\n      onCancel={ () => window.location.href = makePath(['customer']) }\n      onSubmit={ e => onSubmit(e) }\n    >\n      {inputs.map(input =>\n        <Input\n          key={ input.id }\n          id={ input.id }\n          name={ input.name }\n          label={ input.label }\n          type={ input.type }\n          min={ input.min }\n          max={ input.max }\n          placeHolder={ input.placeHolder }\n          value={ input.value }\n          onBlur={ input.onBlur }\n          onChange={ input.onChange }\n        />\n      )}\n    </Form>\n  );\n}\n\nexport default Edit;","// External Import\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Functions\nimport { makePath } from '../../functions';\n\n// Components\nimport Input from '../../components/Input/Input';\nimport Form from '../../components/Form/Form';\n\nconst View = props => {\n  // State\n  const [inputs, setInputs] = useState([\n    {\n      id: \"cpf\",\n      name: \"cpf\",\n      label: \"Customer CPF\",\n      type: \"text\",\n      min: \"11\",\n      max: \"11\",\n      placeHolder: \"CPF\",\n      value: ''\n    },\n    {\n      id: \"fname\",\n      name: \"fname\",\n      label: \"First Name\",\n      type: \"text\",\n      min: \"75\",\n      max: \"75\",\n      value: '',\n      placeHolder: \"First Name\"\n    },\n    {\n      id: \"lname\",\n      name: \"lname\",\n      label: \"Last Name\",\n      type: \"text\",\n      min: \"75\",\n      max: \"75\",\n      value: '',\n      placeHolder: \"Last Name\"\n    }\n  ]);\n\n  // Get and Set customer Data\n  useEffect(() => {\n    if (props.id) {\n      axios.get(makePath(['customer', 'search', props.id], 'back'))\n      .then(res => {\n        if (res.status === 200) {\n          if (res.data.cpf) {\n            const newInputs = inputs.slice();\n            newInputs.map((input, i) => {\n              newInputs[i].value = res.data[input.name];\n            });\n\n            console.log(newInputs)\n            setInputs(newInputs);\n          } else {\n            window.alert('Invalid Customer')\n            window.location.href = makePath(['customer'])\n          }\n        } else {\n          window.alert('Connection Error')\n          window.location.href = makePath(['customer'])\n        }\n      })\n    } else {\n      window.alert('Invalid Customer')\n      window.location.href = makePath(['customer'])\n    }\n  }, []);\n\n  return (\n    <Form\n      name=\"Customer\"\n      onSubmit={ () => window.location.href = makePath(['customer']) }\n    >\n      {inputs.map(input =>\n        <Input\n          view=\"1\"\n          key={ input.id }\n          id={ input.id }\n          name={ input.name }\n          label={ input.label }\n          type={ input.type }\n          placeHolder={ input.placeHolder }\n          value={ input.value }\n        />\n      )}\n    </Form>\n  );\n}\n\nexport default View;","// External Import\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Functions\nimport { formatCPF, makePath } from '../../functions';\n\n// Components\nimport Button from '../../components/Button/Button';\nimport ListItem from '../../components/ListItem/ListItem';\n\nconst List = () => {\n  const [ customers, setCustomers ] = useState([]);\n\n  // Get all Customers\n  useEffect(() => getCustomers(), []);\n\n  // Delete\n  const confirmDelete = id => {\n    if (window.confirm('Are you sure you want to delete this customer?')) {\n      axios.delete(makePath(['customer', 'delete', id], 'back'))\n      .then(res => {\n        if (res.status === 200) {\n          getCustomers();\n        }\n      })\n    }\n  }\n\n  // Update Customers\n  const getCustomers = () => {\n    axios.get(makePath(['customer'], 'back'))\n    .then(res => {\n      if (res.status === 200) {\n        setCustomers(res.data);\n      }\n    })\n  }\n\n  // Render\n  return (\n    <div className=\"list-main\">\n      <div className=\"list-header\">\n        <h2>Customers</h2>\n        <Button\n          name=\"New\"\n          color=\"green\"\n          click={ () => window.location.href = makePath(['customer', 'add']) }\n        />\n      </div>\n      <div className=\"list-content\">\n        <ul>\n          {customers.map(customer =>\n            <ListItem\n              key={ customer._id }\n              name={ customer.fname+' '+ customer.lname }\n              subName={ \"CPF: \"+formatCPF(customer.cpf) }\n              url={ 'customer' }\n              id={ customer._id }\n              onDelete={ id => confirmDelete(id) }\n            />\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default List;","import React from 'react';\n\n//Pages\nimport Add from './Add';\nimport Edit from './Edit';\nimport View from './View';\nimport List from './List';\n\n// Render\nconst Customer = props => {\n  switch (props.action) {\n    case 'add':\n      return <Add/>;\n    case 'edit':\n      return <Edit id={ props.id }/>;\n    case 'view':\n      return <View id={ props.id }/>;\n    default:\n      return <List/>;\n  }\n}\n\nexport default Customer;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { makePath } from '../functions';\n\nconst Home = () => {\n  const [info, setInfo] = useState({\n    customer: 0,\n    product: 0,\n    sale: 0\n  });\n\n  useEffect(() => {\n    axios.get(makePath([], 'back'))\n    .then(res => {\n      if (res.status === 200) {\n        setInfo(res.data)\n      }\n    })\n  }, []);\n\n  return (\n    <p>{ JSON.stringify(info) }</p>\n  );\n}\n\nexport default Home;","// External Imports\nimport React from 'react';\n\n// Components\nimport NavBar from './components/NavBar/NavBar';\n\n// Pages\nimport Product from './pages/Product';\nimport Sale from './pages/Sale';\nimport Customer from './pages/Customer';\nimport Home from './pages';\n\n// Style\nimport './style/App.css';\n\n// Font Awesome\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faShoppingBag,\n  faUser,\n  faDollarSign,\n  faHome,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nlibrary.add(\n  faShoppingBag,\n  faUser,\n  faDollarSign,\n  faHome,\n  faTrashAlt\n);\n\n// Render\nfunction App() {\n  const link = window.location.pathname.split('/');\n\n  let page;\n  switch (link[1]) {\n    case 'product':\n      page = <Product\n        action={link[2]}\n        id={link[3]}\n      />;\n      break;\n    case 'sale':\n      page = <Sale\n        action={link[2]}\n        id={link[3]}\n      />;\n      break;\n    case 'customer':\n      page = <Customer\n        action={link[2]}\n        id={link[3]}\n      />;\n      break;\n    case '':\n    default:\n      page = <Home/>;\n      break;\n  }\n\n  return (\n    <div>\n      <NavBar/>\n      <div className=\"container\">\n        { page }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}